# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "develop", "prod" ]
  pull_request:
    branches: [ "develop", "prod" ]

jobs:
  build-deploy:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
        
    - name: Build with Maven
      run: mvn -B package -DskipTests --file pom.xml

    - name: Generate deployment package
      run: zip -r deploy.zip . -x '*.git*'

    - name: Get current time
      uses: josStorer/get-current-time@v2
      id: current-time
      with:
        format: YYYYMMDD-HHmmSS
        utcOffset: "+01:00"

    - name: Deploy to AWS Elastic Beanstalk
      uses: einaregilsson/beanstalk-deploy@v22
      with:
        aws_access_key: ${{ secrets.AWS_ACCESS_KEY }}
        aws_secret_key: ${{ secrets.AWS_SECRET_KEY }}
        region: ${{ vars.AWS_REGION }}
        application_name: rooks-api
        environment_name: ${{ github.ref == 'refs/heads/prod' && 'prod' || 'develop' }}
        version_label: ${{ steps.current-time.outputs.formattedTime }}
        deployment_package: deploy.zip